import { motion } from "motion/react";
import Image from "next/image";
import { useState, useEffect } from "react";

export default function Logo({
  width,
  height,
  className,
}: {
  width: number;
  height: number;
  className?: string;
}) {
  const [showImage, setShowImage] = useState(false);

  // Variantes para la animación de las líneas SVG
  const lineVariants = {
    hidden: {
      pathLength: 0,
      opacity: 0,
    },
    visible: (i: number) => ({
      pathLength: 1,
      opacity: 1,
      transition: {
        pathLength: {
          duration: 1,
          delay: i * 0.1,
        },
        opacity: {
          duration: 0,
          delay: i * 0.1,
        },
      },
    }),
  };

  // Variantes para la imagen del logo
  const imageVariants = {
    hidden: {
      opacity: 0,
    },
    visible: {
      opacity: 1,
      transition: {
        duration: 0.6,
      },
    },
  };

  // Variantes para el contenedor SVG
  const svgVariants = {
    hidden: {
      opacity: 1,
    },
    visible: {
      opacity: 1,
    },
    exit: {
      opacity: 0,
      transition: {
        duration: 0.3,
      },
    },
  };

  // Array de paths SVG con sus respectivos delays
  const svgPaths = [
    {
      d: "m 58.4552,57.6929 c -0.2704,-0.5257 0.0617,-1.8598 0.0402,-2.5792 -0.0633,-2.1594 -1.39,-4.6524 -3.235,-4.8797 -1.7913,-0.2302 -2.2045,1.546 -2.9461,2.5352 -0.7072,0.9441 -1.87,1.7451 -3.0441,2.402 -1.4983,0.8432 -2.6721,1.1535 -4.3499,0.2944 -0.8901,-0.4528 -2.6848,-1.6087 -2.7381,-2.6868 -0.0883,-1.7352 3.0936,0.2765 3.5733,0.5521 1.1207,0.6404 3.4424,1.2519 4.0525,0.0072 0.6311,-1.2781 0.6432,-3.2779 0.1431,-4.5691 -0.5169,-1.3337 -1.5204,-2.1949 -2.3583,-3.0653 -0.7166,-0.7449 -1.9806,-1.9358 -3.6333,-1.771 -1.7317,0.1758 -2.2824,1.8417 -3.0578,2.3776 -0.337,0.2283 -1.4087,0.9407 -1.9655,0.6915 -0.239,-0.11 -0.4828,-0.4594 -0.367,-0.8461 0.1145,-0.3973 0.3747,-0.4561 0.6913,-0.6715 1.0814,-0.7532 2.092,-1.5215 3.1415,-2.3058 4.2833,-3.1766 4.4282,-3.8536 6.9678,-1.9467 1.0266,0.7683 5.4238,4.022 6.8829,4.1917 3.1904,0.384 11.7751,-5.9212 14.2451,-7.7238 1.0841,-0.7895 2.0139,-1.5473 3.0633,-2.3808 l 10.1349,-9.039 c 0.4473,-0.4555 0.9301,-0.8568 1.3864,-1.3344 0.2498,-0.2605 0.3992,-0.4544 0.6377,-0.7265 0.2415,-0.2605 0.4536,-0.4121 0.6893,-0.6679 2.7544,-3.005 6.4139,-7.1838 8.1892,-10.9409 1.1931,-2.5332 0.7246,-2.3789 1.1139,-4.28519 1.4796,-0.09931 4.031,0.69403 5.2685,1.17543 2.967,1.16636 2.643,1.49726 1.7,3.39456 -0.739,1.478 -1.595,2.6729 -2.439,3.9972 -1.6926,2.6763 -5.982,8.2835 -8.5658,10.5816 -0.5692,0.5034 -1.0602,1.1278 -1.6239,1.659 -0.5617,0.526 -1.1418,0.965 -1.6857,1.4951 -0.3496,0.3375 -0.4382,0.4844 -0.8104,0.776 l -2.5893,2.166 c -1.1361,0.9931 -2.418,1.9069 -3.6487,2.8257 -3.7629,2.8091 -7.7048,5.1696 -11.7606,7.5592 -1.4057,0.8311 -3.0312,1.3771 -2.8416,3.6256 0.1425,1.6855 1.4403,3.197 2.4785,3.8462 0.9069,0.5835 1.6177,0.4996 2.5643,0.0694 1.9924,-0.8891 3.23,-4.6877 4.5474,-5.003 1.2307,0.7923 -0.2589,4.3009 -3.2903,5.5545 -3.3879,1.3883 -3.8324,0.3444 -6.4812,-1.8411 -0.6404,-0.5315 -2.045,-1.6855 -3.3874,-1.5603 -2.5833,0.2465 -3.5978,3.6487 -3.7128,5.9173 -5e-4,0.0272 0.4055,4.2431 -0.9793,3.1296 z",
      id: "path3",
      delay: 0,
    },
    {
      d: "M 51.045,10.2399 C 50.3251,8.46978 48.0163,6.18357 45.672,8.47611 44.5662,9.56076 43.9657,11.0407 43.2136,11.9908 43.1539,10.5244 44.4908,8.99354 45.1411,8.1837 45.3796,7.88523 46.335,6.97498 46.6519,6.75464 47.4582,6.202 48.0463,6.37365 48.8468,6.81048 c 2.155,1.17186 2.3343,2.17563 3.74,1.91485 1.93,-0.3477 2.2752,-2.07329 2.2859,-3.9103 0.0042,-0.73804 -0.3083,-2.21579 -0.1865,-2.75523 0.1887,-0.83267 1.0781,-1.580896 1.2618,-0.38154 0.2718,1.74788 0.5337,3.1607 1.5168,4.31578 1.2594,1.48022 2.3608,1.56274 3.8105,0.02751 1.6475,-1.74568 0.7196,-3.14777 1.5105,-4.35319 0.5124,0.51523 0.7664,0.95811 1.379,1.36028 0.7463,0.48278 1.4879,0.45884 1.6692,1.21284 -1.0594,0.41373 -2.5908,1.48985 -3.2612,2.16353 -1.0387,1.03706 -0.9633,2.63337 -0.3256,3.99939 0.7314,1.5688 1.2868,1.7025 2.8883,2.4367 1.0987,0.5032 2.8928,1.1284 4.3238,1.1358 1.6686,0.0097 2.0389,-0.6109 2.7461,-1.5165 1.2005,-1.5416 1.6538,-1.4414 2.451,-0.8935 0.2809,2.5776 -5.5278,4.4754 -7.7447,4.4627 -1.744,-0.0096 -3.5466,-0.718 -5.528,-0.729 -2.3616,-0.0134 -3.2826,-0.0544 -5.3603,0.9428 -4.1205,1.9778 -12.1265,7.5711 -15.8291,10.3153 -2.0075,1.4882 -3.9408,2.9169 -5.9473,4.3851 -1.972,1.4486 -4.0132,2.9868 -5.9503,4.4959 -1.9591,1.5284 -3.8941,2.9786 -5.9156,4.5254 l -5.8997,4.543 c -0.2666,0.2333 -0.4487,0.4445 -0.6971,0.6621 -2.4878,2.2098 -3.6206,4.0531 -4.2836,4.6696 -2.03395,-2.1963 -4.58865,-3.797 -7.22256,-5.398 -0.71852,-0.4352 -1.95639,-1.0247 -2.59046,-1.5077 1.96684,-0.7273 6.13958,-2.944 8.20792,-3.9673 2.6856,-1.3341 5.3328,-2.857 7.94,-4.341 3.7098,-2.1075 8.0134,-4.5799 11.6052,-6.8177 1.2896,-0.8043 2.5346,-1.5718 3.8099,-2.328 4.0082,-2.3883 11.2253,-6.9668 14.9488,-9.596 1.0299,-0.7251 2.1751,-1.9457 2.846,-3.2713 0.5097,-1.0007 0.4239,-1.3339 -5e-4,-2.3729 z",
      id: "path4",
      delay: 1,
    },
    {
      d: "m 18.0848,54.5609 c 0.2839,-0.3325 1.0756,-0.7694 1.511,-1.061 3.0499,-2.0331 11.2578,-8.6397 14.4815,-11.4024 L 55.0474,24.4867 c 1.8433,-1.3749 4.4038,-3.0344 6.8352,-3.3934 1.0886,-0.1555 3.8306,-0.109 4.713,0.3336 0.1659,1.0473 -0.2924,1.8357 -0.5229,2.6678 -2.7772,0.099 -5.5597,-0.6575 -8.6623,1.2502 -2.2665,1.3939 -6.388,4.5557 -8.45,6.3107 -0.4988,0.4264 -0.8924,0.7636 -1.3727,1.1259 -0.2668,0.2006 -0.4085,0.3706 -0.6718,0.5684 -0.2808,0.2178 -0.3653,0.2558 -0.6348,0.5047 -0.3937,0.3681 -0.9199,0.7967 -1.3645,1.137 l -6.6226,5.6276 c -0.5303,0.5114 -0.9141,0.7325 -1.3366,1.1614 -1.1402,1.1435 -4.1276,3.4715 -5.2186,4.5347 -0.524,0.5095 -0.79,0.6935 -1.269,1.1155 l -6.5488,5.8158 c -0.4707,0.4055 -0.7769,0.7523 -1.2357,1.1427 -0.8888,0.7482 -1.6725,1.6155 -2.5775,2.2821 -0.7774,-0.2338 -1.6442,-1.3614 -2.023,-2.1105 z",
      id: "path7",
      delay: 2,
    },
    {
      d: "m 50.3113,35.785 c 0.381,-0.609 0.8451,-0.9003 1.5094,-1.3052 0.565,0.2968 2.2752,2.8182 5.9748,2.366 3.498,-0.4295 5.0709,-3.3038 7.2424,-5.4951 l 2.1069,-2.2015 c 0.3603,-0.4074 0.7149,-0.6668 1.0813,-1.0684 L 79.3298,17.7506 c 1.7193,-1.4959 3.523,-4.0099 4.5813,-6.0656 1.2023,-2.34889 1.4705,-3.77575 2.0004,-6.56481 1.9401,-0.27179 2.2449,0.63984 2.9805,1.06319 -0.2173,4.32812 -4.7444,11.28692 -7.4242,13.65542 l -11.3631,9.9585 c -1.4142,1.2676 -6.6653,6.3803 -7.3214,6.8633 -1.475,1.0817 -3.7978,3.0592 -6.575,2.7775 -2.3429,-0.2299 -5.3889,-2.3415 -5.897,-3.6531 z",
      id: "path9",
      delay: 3,
    },
    {
      d: "M 4.47947,11.009 C 6.90047,10.5367 9.19494,9.59067 11.403,8.70793 12.1105,8.42102 12.8736,8.0139 13.6128,7.77622 14.3662,10.9548 18.3976,16.7065 20.472,19.4227 l 2.6916,3.3906 c -0.7991,0.8291 -7.4423,4.1332 -9.0961,4.5989 -0.3871,-0.3505 -1.0924,-1.2049 -1.4948,-1.7696 -0.4583,-0.65 -0.8885,-1.2847 -1.3243,-1.9471 C 9.82901,21.5389 5.29482,13.2542 4.47947,11.009 Z",
      id: "path12",
      delay: 4,
    },
    {
      d: "m 93.315835,36.234831 c -0.003,0.56105 0.678434,0.65124 1.309758,0.898353 0.582746,0.237018 0.997671,0.4088 1.564011,0.651239 0.907391,0.387679 2.138509,1.02247 2.925922,1.49931 0.468451,0.285151 0.908674,0.525814 1.386014,0.823303 l 2.47562,1.940821 c 1.54073,1.546414 0.89823,1.466411 4.63685,-1.402483 l 3.19878,-2.778704 2.24465,-2.580006 c 0.65626,-0.940971 0.76533,-1.229205 0.77083,-2.167278 0.003,-0.504226 -3.23086,-2.47402 -3.69556,-2.820669 -1.15211,-0.850219 -6.0181,-4.112494 -6.92733,-4.117633 -0.35379,-0.0028 -2.03292,2.142697 -2.4252,2.517478 -0.29238,0.284404 -0.33179,0.370202 -0.58733,0.663577 -0.207421,0.249635 -0.410163,0.397212 -0.635544,0.630678 -0.26351,0.266646 -0.315937,0.4031 -0.585771,0.673297 -1.179883,1.201168 -3.217112,3.375923 -4.354466,4.352129 -0.213558,0.183839 -0.466985,0.365154 -0.711522,0.546375 -0.222356,0.167577 -0.588246,0.359453 -0.589712,0.670213 z",
      id: "path29",
      delay: 5,
    },
    {
      d: "m 19.2753,5.28317 c 0.3909,-0.30726 3.1181,-1.01285 3.789,-1.0918 l 2.273,3.60166 c 0.7543,1.16442 1.5325,2.29717 2.3201,3.42477 l 4.746,6.8531 c -0.8877,0.8443 -2.2832,1.9661 -3.6721,2.2299 -0.9157,-0.9579 -1.8961,-2.3426 -2.709,-3.5302 -1.5694,-2.2977 -3.2724,-5.1113 -4.617,-7.5554 -0.7026,-1.2706 -1.5793,-2.65372 -2.13,-3.93203 z",
      id: "path15",
      delay: 6,
    },
    {
      d: "m 86.9325,41.4491 c 0.2985,-0.4952 2.4491,-2.462 3.3747,-2.13 1.0778,0.3934 3.8798,2.9561 4.9009,3.7522 0.7809,0.5985 4.2627,3.8071 4.499,4.2439 -0.7362,1.5611 -2.4472,3.0507 -4.8618,2.9726 -0.3689,-0.6506 -1.337,-1.7892 -1.8384,-2.3437 L 91.0133,45.758 c -0.6472,-0.7507 -1.355,-1.4629 -2.0309,-2.1657 -0.3612,-0.3832 -0.6077,-0.6792 -1.0005,-1.0354 -0.4274,-0.3904 -0.875,-0.6492 -1.0494,-1.1078 z",
      id: "path16",
      delay: 7,
    },
  ];

  // Efecto para mostrar la imagen después de que terminen las animaciones SVG
  useEffect(() => {
    const timer = setTimeout(() => {
      setShowImage(true);
    }, 2000); // 2 segundos para que terminen todas las animaciones

    return () => clearTimeout(timer);
  }, []);

  return (
    <motion.a
      className="relative cursor-pointer"
      href="/"
      whileHover={{ scale: 1.05 }}
      whileTap={{ scale: 0.95 }}
    >
      {/* Imagen del logo */}
      <motion.div
        className="absolute top-0 left-0"
        variants={imageVariants}
        initial="hidden"
        animate={showImage ? "visible" : "hidden"}
      >
        <Image
          src="/images/zihuame_logo.svg"
          alt="Logo de Zihuame Mochilla"
          width={width}
          height={height}
          className={`${className ? className + " " : ""}`}
          priority
        />
      </motion.div>

      {/* SVG animado */}
      <motion.div
        variants={svgVariants}
        initial="hidden"
        animate={showImage ? "exit" : "visible"}
      >
        <svg
          width={width}
          height={height}
          className={`${className ? className + " " : ""}`}
          viewBox={`0 0 ${width} ${height}`}
          fill="none"
          version="1.1"
          id="svg16"
          xmlSpace="preserve"
          xmlns="http://www.w3.org/2000/svg"
        >
          <defs id="defs16" />
          {svgPaths.map((path, index) => (
            <motion.path
              key={path.id}
              className="line"
              style={{
                stroke: "#000007",
                strokeWidth: 1,
                fill: "none",
                fillOpacity: 1,
                display: "inline",
              }}
              d={path.d}
              id={path.id}
              variants={lineVariants}
              initial="hidden"
              animate="visible"
              custom={index}
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          ))}
        </svg>
      </motion.div>
    </motion.a>
  );
}
